enum dbStatus {
  ACTIVE = 'ACTIVE',
  INACTIVE = 'INACTIVE',
  DELETE = 'DELETE',
  BLOCKED = 'BLOCKED'
}
enum inheritanceRule {
  COPY_AND_CHANGE = 'COPY_AND_CHANGE',
  NONE = 'NONE'
}

enum contentMetaCategoryMarkDone {
  NO_ACTION = 'NO_ACTION',
  PASS = 'PASS',
  FAIELD = 'FAILED'
}

enum assetEventType {
  STATE_TRANSITION = 'STATE_TRANSITION',
  STATE_TRANSITION_IMMEDIATE_PUBLISH = 'STATE_TRANSITION_IMMEDIATE_PUBLISH',
  GEO_POLICY = 'GEO_POLICY'
}
enum assetScheduleStatus {
  READY_FOR_PUBLISHING = 'READY_FOR_PUBLISHING',
  SCHEDULED = 'SCHEDULED',
  IN_QUEUE = 'IN_QUEUE',
  PUBLISHED = 'PUBLISHED',
  FAILED = 'FAILED',
  DELETED = 'DELETED',
  DEPUBLISH = 'DEPUBLISH'
}

enum assetGroupEvent {
  UNKNOWN = 'UNKNOWN',
  CREATE = 'CREATE',
  UPDATE = 'UPDATE',
  VERIFICATION_INITIATED = 'VERIFICATION_INITIATED',
  VERIFICATION_FAILED = 'VERIFICATION_FAILED',
  VERIFICATION_SUCCESS = 'VERIFICATION_SUCCESS',
  PREVIEW_INITIATED = 'PREVIEW_INITIATED',
  PREVIEW_FAILED = 'PREVIEW_FAILED',
  PREVIEW_SUCCESS = 'PREVIEW_SUCCESS',
  TRANSCODING_INITIATED = 'TRANSCODING_INITIATED',
  TRANSCODING_FAILED = 'TRANSCODING_FAILED',
  TRANSCODING_SUCCESS = 'TRANSCODING_SUCCESS',
  FETCH_DETAIL_INITIATED = 'FETCH_DETAIL_INITIATED',
  FETCH_DETAIL_SUCCESS = 'FETCH_DETAIL_SUCCESS',
  FETCH_DETAIL_FAILED = 'FETCH_DETAIL_FAILED',
  SUCCESS = 'SUCCESS',
  FAILED = 'FAILED',
  FETCH_VALIDATE = 'Fetch & Validate',
  FETCH_DETAILS_REQUESTED_LOGS = 'Fetch & Validate Requested',
  FETCH_DETAILS_FAILED_LOGS = 'Fetch & Validate Failed',
  FETCH_DETAILS_SUCCESS_LOGS = 'Fetch & Validate Successful',
  PREVIEW_REQUESTED = 'Request Preview',
  PREVIEW_REQUESTED_INITAITED_LOG = 'Preview Requested',
  PREVIEW_REQUESTED_SUCCESS_LOGS = 'Preview Request Successful',
  PREVIEW_REQUESTED_FAILED_LOGS = 'Preview Request Failed',
  TRANSCODING = 'Transcoding',
  TRANSCODE_INITIATED_LOGS = 'Transcoding Initiated',
  TRANSCODING_SUCCESS_LOGS = 'Transcoding Successful',
  TRANSCODING_FAILED_LOGS = 'Transcoding Failed',
  SUBTITLE_UPLOAD_EVENT = 'Subtitle upload',
  SUBTITLE_UPLOAD_ACTIVITY = 'Subtitle Uploaded',
  ASSET_GROUP_SELECTION = 'Asset Group Selection',
  ASSET_GROUP_CREATION = 'Asset Group Creation',
  PREVIEW = 'preview'
}

export enum contentState {
  CREATED = 'CREATED',
  DRAFT = 'DRAFT',
  DRAFT_COMPLETE = 'DRAFT_COMPLETE',
  READY_FOR_PUBLISHING = 'READY_FOR_PUBLISHING',
  PUBLISHED = 'PUBLISHED',
  SCHEDULE_PUBLISH = 'SCHEDULE_PUBLISH',
  DE_PUBLISH = 'DEPUBLISHED',
  RIGHTS_EXPIRED = 'RIGHTS_EXPIRED',
  ARCHIEVED = 'ARCHIEVED',
  // Schedule publish progress
  IN_PROGRESS = 'IN_PROGRESS',
  PUBLISH_FAIL = 'PUBLISH_FAIL'
}

export enum contentStatus {
  // Active or deleted
  ACTIVE = 'ACTIVE',
  IN_ACTIVE = 'IN_ACTIVE',
  // Draft status
  DRAFT_IN_PROGRESS = 'DRAFT_IN_PROGRESS',
  DRAFT_UNDER_QC = 'DRAFT_UNDER_QC',
  // Tollgate statuses
  DRAFT_TOLLGATE_VALIDATION_PASSED = 'DRAFT_TOLLGATE_VALIDATION_PASSED',
  DRAFT_TOLLGATE_VALIDATION_FAILED = 'DRAFT_TOLLGATE_VALIDATION_FAILED',
  DRAFT_TOLLGATE_VALIDATION_BY_PASS = 'DRAFT_TOLLGATE_VALIDATION_BY_PASS',
  QC_PASSED = 'QC_PASSED',
  QC_FAILED = 'QC_FAILED',
  QC_IN_PROGRESS = 'QC_IN_PROGRESS',
  QC_BY_PASS = 'QC_BY_PASS',
  // Publishing status
  FAILED = 'FAILED',
  SUCCESS = 'SUCCESS'
}

export enum PublishingPipelineStatusType {
  BLITZ_JSON_CREATION = 'BLITZ_JSON_CREATION',
  BLITZ_JSON_UPLOAD = 'BLITZ_JSON_UPLOAD',
  BLITZ_ES_PUBLISH = 'BLITZ_ES_PUBLISH',
  BLITZ_XML_VALIDATION = 'BLITZ_XML_VALIDATION',
  AVS_INGESTION = 'AVS_INGESTION',
  AVS_PUBLISH = 'AVS_PUBLISH',
  DEPUBLISH = 'DEPUBLISH',
  RIGHT_EXPIRED = 'RIGHT_EXPIRED'
}

enum assetAction {
  PUBLISH = 'PUBLISH',
  DEPUBLISH = 'DEPUBLISH',
  RIGHT_EXPIRED = 'RIGHT_EXPIRED'
}

enum geoTagStatus {
  ACTIVE = 'ACTIVE',
  INACTIVE = 'INACTIVE'
}

enum imageVariantStatus {
  DRAFT = 'DRAFT',
  PUBLISH = 'PUBLISH',
  DEPUBLISH = 'DEPUBLISH'
}

export {
  dbStatus,
  inheritanceRule,
  contentMetaCategoryMarkDone,
  assetGroupEvent,
  assetEventType,
  assetScheduleStatus,
  assetAction,
  geoTagStatus,
  imageVariantStatus
};
